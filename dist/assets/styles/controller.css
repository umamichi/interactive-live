@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  height: 100%;
}

body {
  height: 100%;
  color: #333;
  background-color: #000;
  margin: 0;
  font: 13px/1.5 "游ゴシック", YuGothic, "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "メイリオ", Meiryo, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

img {
  vertical-align: middle;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  font-size: 1em;
}

p {
  margin: 0;
}

ol, ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

dl, dd {
  margin: 0;
}

small {
  font-size: 100%;
}

em {
  font-style: normal;
}

a:hover {
  text-decoration: none;
}

.controller {
  height: 100%;
}

.header {
  width: 100%;
  text-align: center;
  height: 50%;
  background-image: url("../../assets/images/bg_sky.jpg");
  background-repeat: no-repeat;
  background-position: center bottom;
  background-size: auto 100%;
  position: relative;
}

.header__title {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 70%;
  margin: auto;
}

.header--horse {
  background-image: url("../../assets/images/bg_horse.jpg");
}

.controllerBody {
  background-color: #000;
}

.lockCurtain {
  background-color: rgba(0, 0, 0, 0.9);
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  text-align: center;
  z-index: 10;
  display: none;
}

.lockCurtain.show {
  display: block;
}

.lockCurtain .chargingWrapper {
  position: relative;
  margin-top: 70px;
  height: 235px;
}

.lockCurtain .chargingBg {
  width: 240px;
  height: 100%;
  background-image: url("../images/star-mask-bg.svg");
  background-repeat: no-repeat;
  background-position: bottom center;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

.lockCurtain .chargingBg--horse {
  background-image: url("../images/star-mask-bg--horse.svg");
  width: 200px;
}

.lockCurtain .charging {
  width: 240px;
  height: 0%;
  left: 0;
  right: 0;
  margin: auto;
  bottom: 0;
  position: absolute;
  background-color: #FFEF00;
  -webkit-mask-image: url("../images/star-mask.svg");
          mask-image: url("../images/star-mask.svg");
  -webkit-mask-position: bottom center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 100%;
}

.lockCurtain .charging--horse {
  -webkit-mask-image: url("../images/star-mask--horse.svg");
          mask-image: url("../images/star-mask--horse.svg");
  width: 200px;
  background-color: #542A03;
}

.lockCurtain .charging--charging {
  height: 100%;
}

.lockCurtain__text {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 90%;
  height: 50px;
  margin: auto;
  color: #fff;
  font-size: 25px;
  -webkit-transform: translate3d(0, 140px, 0);
          transform: translate3d(0, 140px, 0);
}

.landscapeError {
  display: none;
}

@media screen and (orientation: landscape) {
  .landscapeError {
    display: block;
    position: fixed;
    z-index: 999;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background: #FFF;
  }
  .landscapeError .txt {
    position: absolute;
    font-size: 20px;
    top: 50%;
    left: 20px;
    right: 20px;
    text-align: center;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    color: #555;
    line-height: 1.6;
  }
}

.main {
  box-sizing: border-box;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding-bottom: 20px;
}

.shootingObject {
  position: absolute;
  width: 100px;
  height: 100px;
  left: 0;
  right: 0;
  top: 0;
  margin: auto;
  border-radius: 50px;
  opacity: 0;
  background-image: url("../images/star.png");
  background-size: 100%;
}

.shootingObject--horse {
  background-image: url("../images/batei.png");
}

.shootingObject.shooting {
  -webkit-transform: translateY(-500px);
          transform: translateY(-500px);
  opacity: 0;
  -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0.68, 1, -0.07);
  transition: -webkit-transform 0.3s cubic-bezier(0, 0.68, 1, -0.07);
  transition: transform 0.3s cubic-bezier(0, 0.68, 1, -0.07);
  transition: transform 0.3s cubic-bezier(0, 0.68, 1, -0.07), -webkit-transform 0.3s cubic-bezier(0, 0.68, 1, -0.07);
}

.shootingObject.show {
  opacity: 1;
}

.shootingButton__wrapper {
  position: relative;
  height: 110px;
  text-align: center;
}

.buttonWrapper {
  position: absolute;
  width: 100%;
  top: 0;
  z-index: 1;
}

.shootingButton {
  width: 30%;
  display: inline-block;
  margin-right: 2%;
}

.shootingButton:last-child {
  margin-right: 0;
}

.shootingButton.disable .shootingButton__able {
  display: none;
}

.shootingButton.disable .shootingButton__disable {
  display: block;
}

.shootingButton__able {
  display: block;
}

.shootingButton__disable {
  display: none;
}

.colorList {
  font-size: 0;
  text-align: center;
  margin-top: 10px;
}

.colorList__button {
  display: inline-block;
  width: 20px;
  height: 20px;
  margin-bottom: 20px;
  vertical-align: middle;
  margin-right: 5%;
  border: solid 3px #000;
  border-radius: 60px;
  cursor: pointer;
  opacity: 0.2;
}

.colorList__button.selected {
  box-shadow: 0 0 0 2px #fff;
  opacity: 1;
}

.colorList__button:last-child {
  margin-right: 0;
}

.colorSelectText {
  color: #fff;
  text-align: center;
  font-size: 20px;
  font-weight: bold;
  position: relative;
}

.colorSelectText::before {
  position: absolute;
  content: '';
  width: 50px;
  height: 2px;
  background-color: #fff;
  left: 40px;
  top: 15px;
}

.colorSelectText::after {
  position: absolute;
  content: '';
  width: 50px;
  height: 2px;
  background-color: #fff;
  right: 40px;
  top: 15px;
}

.skinBg {
  position: absolute;
  top: 50%;
  bottom: 0;
  left: 0;
  right: 0;
  background: url("../images/bg_horse_2.jpg");
  background-size: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
